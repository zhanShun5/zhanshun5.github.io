:root{
    color-scheme: light dark;
}

html {
    scroll-behavior: smooth;
}

body {
    background-color: light-dark(#f5f4f0, #21242b);
    color: light-dark(#21242b, #f5f4f0);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;
    margin: 0;
    padding: 0 5%;
    background-size: cover;
    background-attachment: fixed;
    background-position: center;
}

.main-content {
    flex: 1;
    padding: 20px;
}

.banner {
    background-color: #222;
    padding: 20px;
    margin-bottom: 10px;
}

.banner .title{
    transform: translateX(80px);
}

svg text{
    text-align: center;
    fill: transparent;
    stroke: #fff;
    stroke-width: 0.1;
    stroke-dasharray: 150;
    stroke-dashoffset: 150;
    animation: textAnimation 4s ease-in-out 1 forwards;
}

@keyframes textAnimation {
    0% {
        stroke-dashoffset: 150;
    }
    65% {
        fill: transparent;
        stroke: #fff
    }
    100%{
        fill: #fff;
        stroke-dashoffset: 0;
        stroke: black;
    }
}

.list {
    transform-style: preserve-3d;
    transform: perspective(100px);
    display: flex;
    flex-direction: column; 
    align-items:stretch;    
    gap: 10px;  
}

.list .item{   /*default state that items ins a list are*/
    transition: .3s ease-in-out;
    filter: brightness(.3);

    display: flex;
    flex-direction: column;
    align-items: flex-start;
    position: relative
}


.item img {
    max-width: auto;
    height: auto;
    cursor: pointer;   /* changes how the mouse looks*/
}

.list .item:hover{  /*state that itens are in when hovered over*/
    filter: brightness(1);
    transform: scale(2.1);
    transform: translateX(80px);
}

/* using '+*' to point to the item to the right of the item being hovered. '*' only points to an item if there is a valid target.  */

.list .item:hover + * { 
    filter: brightness(.2);
    transform: translateX(25px);
}
/* using 'has(+*)' to point to the item to the left of the item being hovered. 'has(+*)' only points to an item if there is a valid target.  */

.list .item:has(+ *:hover) { 
    filter: brightness(.2);
    transform: translateX(25px);
}

.item-preview {
    background-color: #fc0000;

    padding: 20px;
    margin-top: 10px;
    max-height: 100%;
    max-width: 100%;

    border: 1px solid #0f0;
    box-sizing: border-box;
    opacity: 1;

    z-index: 100;
}

/* item containers that are in the images*/
.item-container {
    background-color: #111;

    padding: 20px;
    margin-top: 10px;


    border: 1px solid #0f0;
    box-sizing: border-box;
    opacity: 0;
    max-height: 0;
    overflow: hidden;
    transition: all 0.25s ease-in-out;

    z-index: 100;
}

.item-container.active {
    transform: translateX(-80px);
    opacity: 1;
    max-height: 100%; 
    margin-top: 10px;
    max-width:  100%;
    width: clamp(800px, 100vm, 1600px);
    height: clamp(800px, 100vm, 1600px);
}

.item-container p {
    margin: 0;
    transition: transform 0.25s ease;
    transform: translateY(20px);
}
.item-container.active p {
    transform: translateY(0);
}


/* Image container */

.image-container{
    display: flex; 
    flex-direction: row;
    flex-wrap: wrap;
    align-content: space-evenly;
    align-items: stretch;
    justify-content: space-evenly;
    gap: 30px;
    margin-left: 1%;
    margin-right: 1%; 
    width: 100%;
    height: 100%;
    object-fit: cover;
}


.image-item{  /* the images */
    display: block;  /* ensure proper display */
    opacity: 1;     /* make fully visible by default */
    transform: none; /* remove any transform */
    transition: transform 0.3s ease-in-out; /* optional: for smooth hover effects */
    max-width: 100%; /* ensure images fit their container */
    height: auto;    /* maintain aspect ratio */
}

.image-item img {
    width: 100%;
    height: auto;
    display: block;
}

/* .image-item:hover figcaption {
    opacity: 0.7;
} */

.image-item figcaption {
    margin-top: 8px;
}





 /* Modal styles for show image upon clicking on an image */
 .modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    z-index: 1000;
    padding: 2rem;
    cursor: pointer;
    overflow: auto;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.modal.active {
    display: flex;
    opacity: 1;
    justify-content: center;
    align-items: center;
}

.modal-content {
    max-width: 90%;
    max-height: 90vh;
    object-fit: contain;
    border-radius: 4px;
}

.modal-close {
    position: fixed;
    top: 1rem;
    right: 1rem;
    color: white;
    font-size: 2rem;
    cursor: pointer;
    background: none;
    border: none;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgba(0, 0, 0, 0.5);
    border-radius: 50%;
    transition: background-color 0.3s ease;
}

.modal-close:hover {
    background-color: rgba(0, 0, 0, 0.8);
}


/* text container */

.text-container {
    display: flex;
    flex-direction: row;
    gap: 20rem;
    margin-bottom: 2rem;
    margin-left: 3%;
    margin-right: 3%;
}


.title {
    flex: 1;
    margin-top: 2%;
    font-size: 2rem;
    font-weight: 500;
    max-width:300px;
    color: #ccc;
}

.description {
    flex:  2;
    margin-top: 20px;
    color: #ccc;
}

/* Scroll to the top button */ 

#scrollToTopBtn {
    position: fixed;
    bottom: 50px;
    right: 50px;
    background-color: #000;
    color: white;
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    cursor: pointer;
    visibility: hidden;
    opacity: 0;
    transition: 0.3s ease-in-out;
    z-index: 99;
}

#scrollToTopBtn:hover {
    background-color: #333;
}

#scrollToTopBtn.visible {
    visibility: visible;
    opacity: 1;

}

/* Arrow icon inside button */
#scrollToTopBtn::after {
    content: "â†‘";
    font-size: 24px;
}


